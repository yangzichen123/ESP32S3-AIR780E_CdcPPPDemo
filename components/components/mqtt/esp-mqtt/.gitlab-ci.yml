stages:
  - build
  - deploy


variables:
  IDF_REPO: ${GITLAB_SSH_SERVER}/idf/esp-idf.git
  OLDER_IDF: release/v3.1
  RECENT_IDF: release/v3.3

.add_gh_key_remote: &add_gh_key_remote |
  cit_add_ssh_key "${GH_PUSH_KEY}"
  git remote remove github || true
  git remote add github ${GH_PUSH_REPO}

before_script:
  # Use CI Tools
  - curl -sSL ${CIT_LOADER_URL} | sh
  - source citools/import_functions
  # Add gitlab ssh key
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - echo -n $GITLAB_KEY > ~/.ssh/id_rsa_base64
  - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - echo -e "Host gitlab.espressif.cn\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
  - PATH=$CI_PROJECT_DIR/esp-idf/tools:$PATH
  - export MQTT_PATH=$CI_PROJECT_DIR

.build_template:
  stage: build
  tags:
    - build
    - internet
  script:
    # Replace the IDF's default esp-mqtt with this version
    - rm -rf $IDF_PATH/components/mqtt/esp-mqtt && cp -r $MQTT_PATH $IDF_PATH/components/mqtt/
    # Build the examples
    - $MQTT_PATH/ci/build_examples.sh

build_idf_v3.3:
  extends: .build_template
  image: espressif/idf:release-v3.3

build_idf_v4.0:
  extends: .build_template
  image: espressif/idf:release-v4.0

build_idf_v4.1:
  extends: .build_template
  image: espressif/idf:release-v4.1

build_idf_v4.2:
  extends: .build_template
  image: espressif/idf:release-v4.2

build_idf_v4.3:
  extends: .build_template
  image: espressif/idf:release-v4.3

build_idf_v4.4:
  extends: .build_template
  image: espressif/idf:release-v4.4

build_and_test_qemu:
  stage: build
  image: ${CI_DOCKER_REGISTRY}/qemu:v4.4-1-20210517
  tags:
    - build
    - shiny
  dependencies: []
  script:
    - export IDF_PATH=$CI_PROJECT_DIR/esp-idf
    - git clone "${IDF_REPO}"
    # switch to IDF and setup the tools
    - $MQTT_PATH/ci/set_idf.sh release/v4.4
    - $IDF_PATH/tools/idf_tools.py install-python-env
    - cd $IDF_PATH && tools/idf_tools.py --non-interactive install && eval "$(tools/idf_tools.py --non-interactive export)"
    - python -m pip install -r $IDF_PATH/tools/ci/python_packages/ttfw_idf/requirements.txt
    - python -m pip install paho-mqtt
    - $MQTT_PATH/ci/set_mqtt.sh $CI_COMMIT_SHA
    # build publish-connect stress test, setup test parameters
    - cd tools/test_apps/protocols/mqtt/publish_connect_test && cat sdkconfig.qemu | $IDF_PATH/tools/ci/envsubst.py > sdkconfig.defaults && idf.py build
    - export TEST_PATH=`pwd`
    - export PYTHONPATH="$IDF_PATH/tools:$IDF_PATH/tools/ci/python_packages"
    # run test (with environment->qemu)
    - cd $IDF_PATH/tools/ci/python_packages/tiny_test_fw/bin
    - python Runner.py $TEST_PATH -c $TEST_PATH/publish_connect_mqtt_qemu.yml -e $TEST_PATH/env.yml

push_master_to_github:
  stage: deploy
  image: ${CI_DOCKER_REGISTRY}/esp32-ci-env
  tags:
    - build
  only:
    - master
    - idf_v4.x
  when: on_success
  variables:
    GIT_STRATEGY: clone
  script:
    - *add_gh_key_remote
    - git push github HEAD:${CI_COMMIT_REF_NAME}
